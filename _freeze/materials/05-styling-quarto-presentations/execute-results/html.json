{
  "hash": "80c5f4e246a72ace533fcbae11e5ebca",
  "result": {
    "markdown": "---\nformat: \n  revealjs:\n    slide-number: false\n    height: 900\n    width: 1600\n    logo: \"images/cp_hex_logo.png\"\n    footer: \"[USCOTS Quarto Workshop](https://atheobold.github.io/uscots-quarto/)\"\n    theme: [dark, styles.scss]\n    embed-resources: true\neditor: source\n---\n\n\n##  {background-image=\"images/05-style-crop.png\" background-position=\"center\" background-size=\"cover\"}\n\n::: {style=\"font-size: 6em; color: #FFFFFF;\"}\nStyling Quarto Presentations\n:::\n\n\n::: {.cell}\n\n:::\n\n\n\n## Themes!\n\n::: columns\n::: {.column width=\"40%\"}\n[There are 11 built-in themes provided for Reveal presentations! The `default` and `dark` themes use fairly classic typography and color schemes and are a good place to start.]{.midi}\n\n</br>\n\n[The `default` theme is used automatically â€” use the theme option to switch to an alternate theme.]{.midi}\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"55%\"}\n\n::: fragment\n::: {.large}\n\n```yaml\n---\ntitle: \"Presentation\"\nformat:\n  revealjs: \n    theme: dark\n---\n```\n:::\n\n</br>\n</br>\n\n[Link to default themes available](https://quarto.org/docs/presentations/revealjs/themes.html#using-themes)\n:::\n:::\n:::\n\n\n# Incrementing\n\n## Lists\n\n::: columns\n::: {.column width=\"45%\"}\n\n[**Locally**]{style=\"font-size: 1.25em; color: #ed8402;\"}\n\n```markdown\n::: {.incremental}\n\n- item 1\n- item 2\n- item 3\n\n:::\n```\n\n</br>\n\n::: {.incremental}\n\n- item 1\n- item 2\n- item 3\n\n:::\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"45%\"}\n::: fragment\n[**Globally**]{style=\"font-size: 1.25em; color: #ed8402;\"}\n\n```yaml\nformat:\n  revealjs:\n    incremental: true  \n```\n:::\n:::\n:::\n\n## Pauses\n\nIf you don't have a list of things, but you want to increment components of your slide...\n\n</br>\n\n::: {style=\"font-size: 1.5em;\"}\n\n```markdown\ncontent before the pause\n\n. . .\n\ncontent after the pause\n```\n:::\n\n</br>\n\n. . .\n\ncontent before the pause\n\n. . .\n\ncontent after the pause\n\n## Fragments\n\nIf you have columns and you would like to increment when and how columns appear...\n\n</br>\n\n::: columns\n::: {.column width=\"30%\"}\n::: {.fragment .fade-in-then-out}\nFade out\n:::\n:::\n\n::: {.column width=\"3%\"}\n:::\n\n::: {.column width=\"30%\"}\n::: {.fragment .fade-in}\n::: {.fragment .grow}\n::: {.fragment .semi-fade-out}\nFade in then GROW then fade semi out\n:::\n:::\n:::\n:::\n\n::: {.column width=\"3%\"}\n:::\n\n::: {.column width=\"30%\"}\n::: {.fragment .fade-up}\nSlide up while fading in\n:::\n:::\n:::\n\n\n## Implementation\n\n::: {style=\"font-size: 1.5em;\"}\n\n```markdown\n::: columns\n::: {.column width=\"30%\"}\n::: {.fragment .fade-in-then-out}\nFade out\n:::\n:::\n\n::: {.column width=\"3%\"}\n:::\n\n::: {.column width=\"30%\"}\n::: {.fragment .fade-in}\n::: {.fragment .grow}\n::: {.fragment .semi-fade-out}\nFade in then GROW then fade semi out\n:::\n:::\n:::\n:::\n\n::: {.column width=\"3%\"}\n:::\n\n::: {.column width=\"30%\"}\n::: {.fragment .fade-up}\nSlide up while fading in\n:::\n:::\n:::\n```\n:::\n\n</br>\n\n[Learn more about fragments here!](https://quarto.org/docs/presentations/revealjs/advanced.html#fragments)\n\n## Callouts \n\nIf you want to remind your audience of something important...\n\n</br> \n\n::: {style=\"font-size: 1.5em;\"}\n::: {.callout-tip}\n# Same format!\n\nRemember, you can use the same format to get a callout in a presentation!\n\n```markdown\n::: {.callout-tip}\n\n:::\n```\n:::\n:::\n\n## Tabsets \n\nare quite useful for displaying content side-by-side...\n\n</br>\n\n::: panel-tabset\n### `str_to_lower()`\n\nconverts all letters in the strings to lowercase\n\n<br>\n\n::: {style=\"font-size: 1.5em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nmy_vector <- c(\"Hello,\", \"my name is\", \"Bond\", \"James Bond\")\nstr_to_lower(my_vector)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"hello,\"     \"my name is\" \"bond\"       \"james bond\"\n```\n:::\n:::\n\n:::\n\n### `str_to_upper()`\n\nconverts all letters in the strings to uppercase\n\n</br>\n\n::: {style=\"font-size: 1.5em;\"}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nstr_to_upper(my_vector)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"HELLO,\"     \"MY NAME IS\" \"BOND\"       \"JAMES BOND\"\n```\n:::\n:::\n\n:::\n\n### `str_to_title()`\n\nconverts the first letter of the strings to uppercase\n\n</br>\n\n::: {style=\"font-size: 1.5em;\"}\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"false\"}\nstr_to_title(my_vector)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Hello,\"     \"My Name Is\" \"Bond\"       \"James Bond\"\n```\n:::\n:::\n\n:::\n:::\n\n. . .\n\n</br>\n\n[Learn more about tabsets here!](https://quarto.org/docs/presentations/revealjs/#tabsets)\n\n## Code Output\n\n[Learn more about code output locations here!](https://quarto.org/docs/presentations/revealjs/#output-location)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}