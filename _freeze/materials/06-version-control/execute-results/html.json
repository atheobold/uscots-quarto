{
  "hash": "940306d493e6310dc6f637897952df6b",
  "result": {
    "markdown": "---\ntitle: \"Introduction to Version Control\"\nformat: \n  revealjs:\n    slide-number: false\n    transition: fade\n    height: 900\n    width: 1600\n    logo: \"images/cp_hex_logo.png\"\n    footer: \"[USCOTS Quarto Workshop](https://atheobold.github.io/uscots-quarto/)\"\n    theme: night\n    embed-resources: true\neditor: visual\n---\n\n\n# What is version control\n\n## \n\n[What is Version Control?]{.large}\n\n> [The practice of tracking and managing changes to software code]{.midi}\n\n. . .\n\n</br>\n\n::: {.large .gray}\n::: incremental\n-   Grown to include more than just software code (e.g. documents)!\n-   Version control systems are software tools that help teams manage changes to materials over time.\n:::\n:::\n\n# Why do we want to use version control?\n\n## Some benefits of version control\n\n::: incremental\n- Enhances the project development speed by providing efficient collaboration\n- Leverages the productivity, expedites product delivery, and skills of people through better communication and assistance\n- Reduce possibilities of errors and conflicts\n- Helps in recovery in case of any disaster or contingent situation\n- Informs us about who, what, when, why changes have been made\n:::\n\n## Version control is better than...\n\n::: incremental\n- Including the date in a file name\n- Including contributor initials in a file name\n- Sharing and working on multiple versions of a file (e.g. via email)\n:::\n\n## Ways you're already using version control\n\n::: incremental\n- Suite of online Google products: google docs, google sheets, etc.\n- Dropbox, OneDrive, etc.\n:::\n\n# Using RStudio with version control\n\n## Version control for our workshop\n\n- There are many different version control systems out there!\n\n. . .\n\n> [We will focus on Git and GitHub as our version control system of choice!]{.midi}\n\n## Git and GitHub\n\nGit: \n\n- Free and open-source distributed version control system\n- Strong support for non-linear development\n- Distributed development\n\n. . .\n\nGitHub:\n\n- An online platform where we can share our code, materials, etc. online hassle-free\n\n## Getting started with GitHub\n\n- Create an account on GitHub ([https://github.com](https://github.com)) -- this is free\n\n- Log in on the GitHub website\n\n- Let's talk about some of the key details and functionality here, namely what a **repository** is!\n\n## Getting started with Git\n\nFollow the instructions here, for your operating system, to install Git: [https://happygitwithr.com/install-git.html](https://happygitwithr.com/install-git.html)\n\n## Configure Git: Part I\n\n- Tell Git your email and username\n\n\n::: {.cell}\n\n:::\n\n\n## Configure Git: Part II\n\n- Copy your Personal Access Token (PAT)\n\n- Enter password or token: Paste PAT\n\n\n::: {.cell}\n\n:::\n\n\n\n## Connect RStudio to Git and GitHub\n\nWe're following the directions here: [https://happygitwithr.com/rstudio-git-github.html](https://happygitwithr.com/rstudio-git-github.html)\n\n- Make a repository (repo) on GitHub\n\n- Clone the test GitHub repository to your computer via RStudio\n\n- In RStudio, start a new Project\n\n> [File > New Project > Version Control > Git]{.midi}\n\n- In \"Repository URL\", paste the URL of your new GitHub repository\n\n## Basic Git Commands: Commit\n\nIn RStudio, open the `README.md` file and add the line \"This is a line from RStudio\". **Save your changes**\n\nCommit these changes to your local repo from RStudio:\n\n- Click the \"Git\" tab in the upper right pane\n- Check the \"Staged\" box for `README.md`\n- Click \"Commit\"\n- Type a message in \"Commit message\", such as \"Commit from RStudio\"\n- Click \"Commit\"\n\n## Basic Git Commands: Push\n\nClick the green \"Push\" button to send your local changes to your GitHub repo!\n\n## Basic Git Commands: Pull\n\n> [Git Pull (or Pull) is a command used to update the local version of a repo from a remote repo.]{.midi}\n\nThis can be a very important first step in your workflow when working in a repo with multiple people!\n\n# Another version control process\n\n## Other Git/GitHub implementations\n\n::: incremental\n- Everything we just did through RStudio can be done from the command line (ew?)\n\n- [GitHub Desktop](https://desktop.github.com/) is a wonderful and lightweight application for all of our Git/GitHub-related needs that works independent of any other application\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}