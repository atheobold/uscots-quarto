{
  "hash": "46a7a460eda3ab88fcade050e449b666",
  "result": {
    "markdown": "---\nformat: \n  revealjs:\n    slide-number: false\n    transition: fade\n    height: 900\n    width: 1600\n    logo: \"images/cp_hex_logo.png\"\n    footer: \"[USCOTS Quarto Workshop](https://atheobold.github.io/uscots-quarto/)\"\n    theme: night\n    embed-resources: true\neditor: source\n---\n\n\n\n##  {background-image=\"images/02-hamlet.jpeg\" background-position=\"left\"}\n\n::: {style=\"font-size: 8em; color: #34605f;\"}\nHello Quarto\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n\n\n##\n\n[What is Quarto?]{.large}\n\n> [Quarto® is an open-source scientific and technical publishing system built on Pandoc]{.midi}\n\n. . .\n\n</br> \n\n::: {.large .gray}\nQuarto integrates what has been learned over the last 10-years from RMarkdown into **one** system for creating and publishing reproducible documents.\n:::\n\n## The R Markdown ecosystem\n\n![](images/02-rmd_ecosystem.png){fig-align=\"center\"}\n\n::: notes\nThink of all the packages from the R Markdown universe that you've come to love and rely on over the years. Each package addresses a different need and offers a different output: for example, you can use blogdown or distill for creating websites and blogs, bookdown for writing a book, rticles for writing journal articles, etc.\n:::\n\n## Quarto: Next generation R Markdown\n\n![](images/02-quarto_ball.png){fig-align=\"center\" width=\"30%\"}\n\n::: notes\nQuarto unifies the functionality from these packages,\n\nbuilding on Pandoc on the technical side and on the human side -- over a decade of experience developing, maintaining, and tweaking these packages as well as community feedback R Markdown extension packages.\n\nSuch a unification effort presents a fantastic opportunity to identify and address gaps functionality and inefficiencies in user experience, and the process of building Quarto has been no different.\n:::\n\n## Quarto highlights\n\n::: columns\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"40%\"}\n::: bulletbox\n::: {.fragment .fade-in-then-semi-out}\n![](images/02-quarto_ball-1_4.png){width=\"50px\"} Consistent implementation of attractive and handy features across outputs\n:::\n:::\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"40%\"}\n::: bulletbox\n::: {.fragment .fade-in-then-semi-out}\n![](images/02-quarto_ball-2_4.png){width=\"50px\"} More accessible defaults as well as better support for accessibility\n:::\n:::\n:::\n\n::: {.column width=\"5%\"}\n:::\n:::\n\n::: columns\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"40%\"}\n::: bulletbox\n::: {.fragment .fade-in-then-semi-out}\n![](images/02-quarto_ball-3_4.png){width=\"50px\"} Guardrails, particularly helpful for new learners: YAML completion, code option completion\n:::\n:::\n:::\n\n::: {.column width=\"5%\"}\n:::\n\n::: {.column width=\"40%\"}\n::: bulletbox\n::: {.fragment .fade-in-then-semi-out}\n![](images/02-quarto_ball.png){width=\"50px\"} Support for other languages like Python, Julia, and more \n:::\n:::\n:::\n\n::: {.column width=\"5%\"}\n:::\n:::\n\n::: notes\nSome highlights of these improvements include\n\n--\\> consistent implementation of attractive and handy features across *all* outputs, like tabsets, code-folding, and syntax highlighting,\n\n--\\> more accessible defaults as well as better support for creating accessible documents,\n\n--\\> guardrails that are particularly helpful for new learners, like YAML completion and informative syntax errors,\n\n--\\> and perhaps most excitingly for those who are not coming from the R ecosystem, Quarto offers support for other languages like Python, Julia, and more via the Jupyter engine for executable code chunks. And it's designed to be expandable to more engines and languages, even those that might not exist today.\n\n[pause] So by now I'm assuming many of you have already started playing with Quarto, or you're waiting for me to do that. So, let's dive in and see what all the Quarto fuss is about!\n:::\n\n\n## Quarto makes moving between formats straightforward {.takeaway .center}\n\n::: columns\n::: {.column width=\"33%\"}\n::: fragment\nDocument\n\n::: {.code-file .sourceCode .cell-code}\n{{< fa file >}} lesson-1.qmd\n:::\n\n``` yaml\ntitle: \"Lesson 1\"\nformat: html\n```\n:::\n:::\n\n::: {.column width=\"33%\"}\n::: fragment\nPresentation\n\n::: {.code-file .sourceCode .cell-code}\n{{< fa file >}} lesson-1.qmd\n:::\n\n``` yaml\ntitle: \"Lesson 1\"\nformat: revealjs\n```\n:::\n:::\n\n::: {.column width=\"33%\"}\n::: fragment\nWebsite\n\n::: {.code-file .sourceCode .cell-code}\n{{< fa file >}} _quarto.yml\n:::\n\n``` yaml\nproject:\n  type: website\n\nwebsite: \n  navbar: \n    left:\n      - lesson-1.qmd\n```\n:::\n:::\n:::\n\n::: notes\nWhat did spark my interest was how how straightforward it is with Quarto to move between output formats.\n\nAs an educator, two things are of utmost importance to me about the tools I use to create my materials: reproducibility and ease of transition between output formats, like documents to slides to websites to books.\n\nOver the last year of using Quarto for pretty much everything, I've felt like I've finally found the tool that lets me go from one output type to the other with minimal, if any, futzing around with my source code beyond the yaml.\nFor example, here are common things I produce\n\n--\\> a lesson in document form <br>\n--\\> the same content in presentation form <br>\n--\\> the same content on a page in a website,\n\nand you can see that all that needed to change going between these formats is a few lines in the yaml.\nNothing in the content part of my document.\nNo slide breaks to remove, no citation style to change, no headings to re-level.\nThis ease of transition has freed up time to focus my time on content, and that, folks, is the dream!\n:::\n\n# `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:white;overflow:visible;position:relative;\"><path d=\"M64 96c0-35.3 28.7-64 64-64H512c35.3 0 64 28.7 64 64V352H512V96H128V352H64V96zM0 403.2C0 392.6 8.6 384 19.2 384H620.8c10.6 0 19.2 8.6 19.2 19.2c0 42.4-34.4 76.8-76.8 76.8H76.8C34.4 480 0 445.6 0 403.2zM281 209l-31 31 31 31c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-48-48c-9.4-9.4-9.4-24.6 0-33.9l48-48c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM393 175l48 48c9.4 9.4 9.4 24.6 0 33.9l-48 48c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l31-31-31-31c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z\"/></svg>`{=html} Let's get started! {background-color=\"#447099\" transition=\"slide-in\"}\n\n- Open RStudio\n- Click on \"File\"\n- Select \"New File\"\n- Select \"Quarto Document\"\n  * Fill in the title and author\n  * Select HTML for the format option\n\n- Click \"Create\"!\n\n## A Quarto Document\n\n::: columns\n::: {.column width=\"50%\"}\n    ---\n    title: \"ggplot2 demo\"\n    author: \"Norah Jones\"\n    date: \"May 22nd, 2021\"\n    format: \n      html:\n        code-fold: true\n    ---\n\n    ## Air Quality\n\n    @fig-airquality further explores the impact of temperature \n      on ozone level.\n\n    ```{{r}}\n    #| label: fig-airquality\n    #| fig-cap: Temperature and ozone level.\n    #| warning: false\n\n    library(ggplot2)\n    ggplot(airquality, \n           mapping = aes(x = Temp, y = Ozone)\n           ) + \n\n      geom_point() + \n      geom_smooth(method = \"loess\"\n    )\n    ```\n:::\n\n::: {.column width=\"40%\"}\n![](https://quarto.org/images/hello-knitr.png)\n:::\n:::\n\n## Anatomy of a Quarto document\n\n</br>\n\n[The [YAML](https://yaml.org/) metadata or header is:]{style=\"font-size: 1.55em;\"}\n\n> processed in many stages of the rendering process and can influence the final document in many different ways. It is placed at the very beginning of the document and is read by each of Pandoc, Quarto and `knitr`. Along the way, the information that it contains can affect the code, content, and the rendering process.\n\n\n## Required Inputs\n\n. . .\n\n- What editor should be the default for working in the document?\n\n``` yaml\n---\neditor: visual\n---\n```\n\n</br>\n\n. . .\n\n* What format should the document render in?\n\n``` yaml\n---\nformat: html\n---\n```\n\n## \n\n::: borderbox\n![](images/02-rstudio-source-visual.png){fig-align=\"center\"}\n:::\n \n## Code\n\n</br>\n\n\n\n::: {.cell output-location='column-fragment' tbl-cap='Mean body mass (g) of penguins on Palmer Archipelego'}\n\n````{.cell-code}\n```{{r}}\n#| output-location: column-fragment\n#| label: species-means\n#| tbl-cap: Mean body mass (g) of penguins on Palmer Archipelego\n#| warning: false\n\nlibrary(palmerpenguins)\n\npenguins %>%\n  drop_na(body_mass_g) %>% \n  group_by(species) %>% \n  summarize(mean_weight = mean(body_mass_g)\n            )\n```\n````\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  species   mean_weight\n  <fct>           <dbl>\n1 Adelie          3701.\n2 Chinstrap       3733.\n3 Gentoo          5076.\n```\n:::\n:::\n\n\n\n. . .\n\n</br>\n\n[`{r}`]{.midi} -- notates what language the code is written in\n\n. . .\n\n[`#|`]{.midi} -- defines code chunk options\n\n## Text\n\n> Quarto is based on Pandoc and uses its variation of markdown as its underlying document syntax. [Markdown](https://daringfireball.net/projects/markdown/) is a plain text format that is designed to be easy to write, and, even more importantly, easy to read\n\n</br>\n\n::: {style=\"font-size: 1.25em;\"}\n\n``` markdown\n# Heading 1\nThis is a sentence with some **bold text**, some *italic text* and an [image](image.png).\n```\n:::\n\n## Text Formatting\n\n</br>\n\n+-----------------------------------+-------------------------------+\n| Markdown Syntax                   | Output                        |\n+===================================+===============================+\n|     *italics* and **bold**        | *italics* and **bold**        |\n+-----------------------------------+-------------------------------+\n|     superscript^2^ / subscript~2~ | superscript^2^ / subscript~2~ |\n+-----------------------------------+-------------------------------+\n|     ~~strikethrough~~             | ~~strikethrough~~             |\n+-----------------------------------+-------------------------------+\n|     `verbatim code`               | `verbatim code`               |\n+-----------------------------------+-------------------------------+\n\n## Headings\n\n+---------------------+-----------------+\n| Markdown Syntax     | Output          |\n+=====================+=================+\n|     # Header 1      | # Header 1      |\n+---------------------+-----------------+\n|     ## Header 2     | ## Header 2     |\n+---------------------+-----------------+\n|     ### Header 3    | ### Header 3    |\n+---------------------+-----------------+\n|     #### Header 4   | #### Header 4   |\n+---------------------+-----------------+\n|     ##### Header 5  | ##### Header 5  |\n+---------------------+-----------------+\n|     ###### Header 6 | ###### Header 6 |\n+---------------------+-----------------+\n\n\n## Additional YAML Options\n\n</br>\n\n``` yaml\n---\nformat: \n  html:\n    code-fold: true\n---\n```\n\n</br>\n\nNotice! \n\n* `html:` is now on a new line\n* this line is below `format:` **and** indented\n\n* the HTML formatting options are on their own line\n* these lines are below `html:` **and** indented\n\n\n# `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:white;overflow:visible;position:relative;\"><path d=\"M64 96c0-35.3 28.7-64 64-64H512c35.3 0 64 28.7 64 64V352H512V96H128V352H64V96zM0 403.2C0 392.6 8.6 384 19.2 384H620.8c10.6 0 19.2 8.6 19.2 19.2c0 42.4-34.4 76.8-76.8 76.8H76.8C34.4 480 0 445.6 0 403.2zM281 209l-31 31 31 31c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-48-48c-9.4-9.4-9.4-24.6 0-33.9l48-48c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM393 175l48 48c9.4 9.4 9.4 24.6 0 33.9l-48 48c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l31-31-31-31c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z\"/></svg>`{=html} Your turn! {background-color=\"#447099\" transition=\"slide-in\"}\n\nThe exhaustive list of YAML options that can be used for HTML documents can be found here: <https://quarto.org/docs/reference/formats/html>.\n\n</br>\n\nUsing this resource add the following to your document:\n\n- code folding\n- is self-contained\n- center alignment of all figures\n- an execution option which suppresses messages output from R\n\n[Afterward, add at least one additional YAML option of your choosing!]{style=\"font-size: 1.25em; color: #e28743\"}\n\n<br>\n<br>\n<br>\n<br>\n\n",
    "supporting": [
      "02-quarto-docs_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}